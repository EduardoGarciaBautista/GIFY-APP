{"version":3,"sources":["Components/AddCategory.js","Components/GifGridItem.js","helpers/getGifs.js","Components/GifGrid.js","hooks/useFetchGifs.js","App.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","length","cats","type","value","onChange","e","target","GifGridItem","title","url","id","className","src","alt","getGifs","category","a","replace","fetch","result","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","key","GifExpertApp","categories","item","ReactDOM","render","document","getElementById"],"mappings":"6MAqCeA,EAlCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAiBrC,OAEI,0BAAMC,SAVW,SAACC,GAClBA,EAAMC,iBACFJ,EAAWK,OAAS,IACpBP,GAAc,SAAAQ,GAAI,OAAKN,GAAL,mBAAmBM,OACrCL,EAAc,OAOlB,2BACYM,KAAK,OACLC,MAAOR,EACPS,SAlBO,SAACC,GACpBT,EAAcS,EAAEC,OAAOH,YCPlBI,EAAc,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAWC,GAAS,EAAbC,GAAa,EAATD,KAEpC,OACI,yBAAKE,UAAU,wBACX,yBAAKC,IAAKH,EAAKI,IAAI,QACnB,2BACKL,K,uBCRHM,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAER,mCAENP,EAJc,gDAIiCM,EAASE,QAAQ,IAAK,KAJvD,6BAER,oCAFQ,SAMCC,MAAMT,GANP,cAMdU,EANc,gBAQGA,EAAOC,OARV,uBAQZC,EARY,EAQZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHd,GAAIc,EAAId,GACRF,MAAOgB,EAAIhB,MACXC,IAAG,UAAEe,EAAIC,cAAN,aAAE,EAAYC,iBAAiBjB,QAdtB,kBAiBba,GAjBa,4CAAH,sDCIRK,EAAU,SAAC,GAAkB,IAAD,ECAb,SAACZ,GAAc,IAAD,EACZrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAatC,OAPAC,qBAAU,WACNjB,EAAQC,GAAUiB,MAAK,SAAAb,GAAM,OAAIW,EAAS,CACtCT,KAAMF,EACNS,SAAS,SAEd,CAACb,IAEGc,EDXyBI,CAFK,EAAflB,UAEfa,EAF8B,EAE9BA,QAAeH,EAFe,EAErBJ,KAEhB,OAEI,yBAAKV,UAAU,aAEbiB,EACD,2CACA,6BACKH,EAAOF,KAAI,SAAAC,GAAG,OAAI,kBAAC,EAAD,eAAaU,IAAKV,EAAId,IAAQc,UEVjDW,EAAe,WAAO,IAAD,EAGMzC,mBAAS,CAAC,SAHhB,mBAGvB0C,EAHuB,KAGX3C,EAHW,KAK9B,OACI,oCACI,0CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BACK2C,EAAWb,KAAI,SAAAc,GACZ,OACI,kBAAC,EAAD,CACIH,IAAKG,EACLtB,SAAUsB,UChBtCC,IAASC,OAAO,kBAAC,EAAD,MACdC,SAASC,eAAe,U","file":"static/js/main.63bbad64.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {PropTypes} from 'prop-types';\r\n\r\nconst AddCategory = ({setcategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n\r\n    const handleOnChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (inputValue.length > 2) {\r\n            setcategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n        <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleOnChange}\r\n                />\r\n        </form>\r\n     \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({title, id, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__fadeIn\">\r\n            <img src={url} alt=\"img\"/>\r\n            <p>\r\n                {title}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n"," export const getGifs = async (category) => {\r\n\r\n    const key = '9jyHoCZbTjUX3XiZGx3P3eSM03cwOiBi';\r\n\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${category.replace(' ', '+')}&limit=10&api_key=${key}`;\r\n\r\n    const result = await fetch(url);\r\n\r\n    const { data } = await result.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {loading, data: images} = useFetchGifs(category);\r\n\r\n    return (\r\n    \r\n        <div className=\"card-grid\">\r\n         \r\n         {loading ?\r\n         <h1>Cargando...</h1>:\r\n         <div>\r\n             {images.map(img => <GifGridItem key={img.id} {...img} />)}\r\n         </div>\r\n         }\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(result => setstate({\r\n            data: result,\r\n            loading: false\r\n        }));\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, { useState } from \"react\";\r\nimport AddCategory from \"./Components/AddCategory\";\r\nimport { GifGrid } from \"./Components/GifGrid\";\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setcategories] = useState(['GOKU']);\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert</h2>\r\n            <AddCategory setcategories={setcategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {categories.map(item => {\r\n                    return (\r\n                        <GifGrid\r\n                            key={item}\r\n                            category={item}\r\n                        />\r\n                    )\r\n                })\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from \"./App\";\n\nReactDOM.render(<GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}